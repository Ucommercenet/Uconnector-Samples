<!--
  Available life styles
    Undefined,
    Singleton,
    Thread,
    Transient,
    Pooled,
    Custom,
    PerWebRequest

    <component id="" service="" type="" lifestyle="" />
-->
<configuration>
  <components>
    <!--<component id="UmbracoService"
				   service="UCommerce.Umbraco.Services.IUmbracoService, UCommerce.Umbraco"
				   type="UCommerce.Umbraco.Services.UmbracoService, UCommerce.Umbraco" lifestyle="Singleton"/>-->

    <!-- Configuration -->
    <component id="CommerceConfigurationProvider"
               service="UCommerce.Infrastructure.Configuration.CommerceConfigurationProvider, UCommerce.Infrastructure"
               type="UCommerce.Infrastructure.Configuration.CommerceConfigurationProvider, UCommerce.Infrastructure"
               lifestyle="Singleton" />

    <!-- Data Access -->
    <component id="SessionProvider" service="UCommerce.EntitiesV2.ISessionProvider, UCommerce"
               type="UCommerce.EntitiesV2.SessionProvider, UCommerce" lifestyle="Transient" />
    <component id="Repository" service="UCommerce.EntitiesV2.IRepository`1, UCommerce"
               type="UCommerce.EntitiesV2.Repository`1, UCommerce" lifestyle="Transient" />

    <component id="SoftDeletableRepository" service="UCommerce.EntitiesV2.ISoftDeletableRepository`1, UCommerce"
               type="UCommerce.EntitiesV2.SoftDeletableRepository`1, UCommerce" lifestyle="Transient" />

    <!-- Context API -->
    <component id="SiteContext" service="UCommerce.Runtime.ISiteContext, UCommerce"
               type="UCommerce.Runtime.SiteContext, UCommerce" lifestyle="Transient" />
    <component id="CatalogContext" service="UCommerce.Runtime.ICatalogContext, UCommerce"
               type="UCommerce.Runtime.CatalogContext, UCommerce" lifestyle="Transient" />
    <component id="OrderContext" service="UCommerce.Runtime.IOrderContext, UCommerce"
               type="UCommerce.Runtime.OrderContext, UCommerce" lifestyle="Transient" />
    <component id="ContentService" service="UCommerce.Content.IContentService, UCommerce"
               type="UCommerce.Content.ContentService, UCommerce" lifestyle="Transient" />
    <component id="LocalizationContext"
               service="UCommerce.Infrastructure.Globalization.ILocalizationContext, UCommerce.Infrastructure"
               type="UCommerce.Infrastructure.Globalization.Globalization, UCommerce.Infrastructure" lifestyle="Transient" />
    <component id="ClientContext" service="UCommerce.Xslt.IClientContext, UCommerce"
               type="UCommerce.Xslt.ClientContext, UCommerce" lifestyle="Transient" />

    <!-- Services -->
    <!--<component id="OrderService"
			service="UCommerce.Transactions.IOrderService, UCommerce"
			type="UCommerce.Transactions.OrderService, UCommerce" lifestyle="Singleton"/>
		<component id="PriceService"
			service="UCommerce.Catalog.IPricingService, UCommerce"
			type="UCommerce.Catalog.PricingService, UCommerce" lifestyle="Singleton"/>
		<component id="TaxService"
			service="UCommerce.Catalog.ITaxService, UCommerce"
			type="UCommerce.Catalog.TaxService, UCommerce" lifestyle="Singleton"/>
		<component id="UrlService"
			service="UCommerce.Catalog.IUrlService, UCommerce"
			type="UCommerce.Catalog.UrlService, UCommerce" lifestyle="Singleton"/>
		<component id="ProductReviewService"
			service="UCommerce.Catalog.ProductReviewService, UCommerce"
			type="UCommerce.Catalog.ProductReviewService, UCommerce" lifestyle="Singleton"/>
      -->
  </components>

</configuration>